<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.ehcache.org/ehcache.xsd">

    <diskStore path="java.io.tmpdir/ehcache" />

    <!-- 默认缓存 -->
    <defaultCache 
        maxElementsInMemory="1000" 
        eternal="false"
        timeToIdleSeconds="120" 
        timeToLiveSeconds="120" 
        overflowToDisk="false" />

    <!-- 
        配置自定义缓存
        maxElementsInMemory：缓存中允许创建的最大对象数
        eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
        timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，
        两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效，
        如果该值是 0 就意味着元素可以停顿无穷长的时间。
        timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值，
        这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
        overflowToDisk：内存不足时，是否启用磁盘缓存。
        memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。
    -->
    <!-- userService查询用户的缓存 -->
    <cache name="userIsExists" 
        maxElementsInMemory="1000" 
        eternal="false"
        timeToIdleSeconds="1200"
        timeToLiveSeconds="1200"
        overflowToDisk="false"
        memoryStoreEvictionPolicy="LRU" />

    <cache name="user"
        maxElementsInMemory="1000"
        eternal="false"
        timeToIdleSeconds="120"
        timeToLiveSeconds="120"
        overflowToDisk="false"
        memoryStoreEvictionPolicy="LRU" />

    <!-- userService查询用户的缓存 -->
    <cache name="getUserById" 
        maxElementsInMemory="1000" 
        eternal="false"
        timeToIdleSeconds="120" 
        timeToLiveSeconds="120" 
        overflowToDisk="false"
        memoryStoreEvictionPolicy="LRU" />
        <!-- 密码尝试次数的缓存 -->
    <cache name="passwordRetryCache"
      	maxElementsInMemory="2000"
        eternal="false"
        timeToIdleSeconds="60"
        timeToLiveSeconds="0"
        overflowToDisk="false"
        statistics="true">
    </cache>
        
</ehcache>